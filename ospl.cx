in package ospl

// Initialize bootstrap DDS entities
int16 ddsInit()

// Readonly variables that are automatically set by library
string uri: null
uint32 domainId: 0
string domainName: null
bool singleProcess: false

// Native DDS types
native/type DDS_Participant: "DDS_DomainParticipant"
native/type DDS_Publisher: "DDS_Publisher"
native/type DDS_Subscriber: "DDS_Subscriber"
native/type DDS_Topic: "DDS_Topic"
native/type DDS_Condition: "DDS_Condition"
native/type DDS_ReadCondition: "DDS_ReadCondition"
native/type DDS_GuardCondition: "DDS_GuardCondition"
native/type DDS_DataReader: "DDS_DataReader"
native/type DDS_DataWriter: "DDS_DataWriter"

// Native ospl types
native/type ospl_copyProgram: "ospl_copyProgram"

// Get full DDS typename
string typename(struct type)

// Get DDS type id
string typeid(struct type)

// Get corto identifier from DDS (type) identifier
string cortoId(string ddsType)

// Convert type to a metadescriptor.
string toMetaXml(struct type)

// Inject type from metadescriptor
int16 fromMetaXml(string xml, string type, string keys)

// Get keylist string from type
string getKeylist(lang/struct type)

// Type used to copy out data from DCPSTopic samples
class DCPSTopic:/
  name: string, key
  type_name: string
  meta_data: string
  key_list: string

// Wait for topic
DCPSTopic waitForTopic(string pattern, core/time timeout, DDS_GuardCondition guard)

// Register type for a topic using typedescriptors from DCPSTopic
DCPSTopic registerTypeForTopic(string topicName)

// Get list of current topics
list{DCPSTopic} getTopics(string pattern)

// Create a new topic for corto type
DDS_Topic registerTopic(string topicName, lang/type type)

class Mount: core/mount, hidden:/
  from: string
  partition: string

  int16 construct()
  void destruct()
  word onSubscribe(core/query query, lang/word ctx) override
  void onUnsubscribe(core/query query, lang/word ctx) override
  core/resultIter onQuery(core/query query) override

  // Mount data from topic
  class Topic : core/mount, hidden :/
    int16 construct()
    void destruct()
    void onNotify(core/subscriberEvent event) override

    rootMount: ospl/Mount
    topicName: string
    topic: tableinstance, readonly

    quit: bool, private|local
    thread: word, private|local
    ddsSub: DDS_Subscriber, private|local
    ddsPub: DDS_Publisher, private|local
    ddsTopic: DDS_Topic, private|local
    ddsReader: DDS_DataReader, private|local
    ddsWriter: DDS_DataWriter, private|local
    program: ospl_copyProgram, private|local


